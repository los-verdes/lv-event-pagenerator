@use "sass:map";

$bright-verde: #0bac44;

a {
  color: $bright-verde;
}

.mdl-layout__drawer .mdl-navigation .mdl-navigation__link {
  // Sort out better formatting (large width?) side nav stuff here:
  padding-left: 4px;
  padding-right: 4px;
}

.lv-header.mdl-layout--fixed-header {
  > header {
    background-color: $bright-verde;
  }
}

.mdl-tooltip {
  font-size: 24px;
  line-height: 24px;
}

.event-card.mdl-card {
  width: 100%;

  > .mdl-card__title {
    height: 176px;
    // padding-right: 5px;
  }

  .event-date {
    margin-left: 15px;
  }

  .expandable-content {
    display: none;
    overflow: hidden;
  }

  .mdl-list__item {
    padding: 0;
  }

  mark {
    background-color: rgba(0, 0, 0, 0.5);
    color: rgb(255, 255, 255);
  }

  summary {
    cursor: pointer;
  }
}

// Wrapping the following in .page-content mostly just to "organize" bits related to our pure CSS card filtering jazz
// .page-content {
input[type="radio"] {
  position: absolute;
  left: -9999px;
}

.filters {
  text-align: center;
  margin-bottom: 2rem;
}

.filters * {
  display: inline-block;
}

.filters label {
  cursor: pointer;
  transition: all 0.1s;
}

.filters label:hover {
  background: $bright-verde;
  color: var(--white);
}
// }

.empty-event-card {
  width: 100%;
}

[value="all"]:checked ~ .event-cards [data-category] {
  display: block;
}

@each $category_name in $category_names {
  [value="#{$category_name}"]:checked ~ .event-cards .mdl-cell:not([data-category~="#{$category_name}"]) {
    display: none;
  }
}

[value="all"]:checked ~ .filters [for="all"] {
  background: $bright-verde;
  color: white;
}
@each $category_name in $category_names {
  [value="#{$category_name}"]:checked ~ .filters [for="#{$category_name}"] {
    background: $bright-verde;
    color: white;
  }
  [value="#{$category_name}"]:disabled ~ .filters [for="#{$category_name}"] {
    color: gray;
    cursor: no-drop;
  }
}

// [value="all"]:checked + label {
//   background: $bright-verde;
// }
@each $team, $color in $team_colors {
  .event-card-atxvs#{$team} > .mdl-card__title {
    // background-image: linear-gradient((random(50) + 100)+deg, $color, $bright-verde);
    background-image: linear-gradient(125deg, $color, $bright-verde);

    mark {
      padding: 2px;
      color: $bright-verde;
      background-color: rgba($bright-verde, 0.75);
    }
  }
}

@each $team, $color in $team_colors {
  .event-card-#{$team}vsatx > .mdl-card__title {
    // background-image: linear-gradient((random(50) + 100)+deg, $bright-verde, $color);
    background-image: linear-gradient(125deg, $bright-verde, $color);

    mark {
      padding: 2px;
      color: white;
      background-color: rgba($color, 0.75);
    }
  }
}

$default_category_styling: (
  "cover_bg_color": transparent,
  "cover_image": "none",
  "cover_position": center,
  "cover_size": cover,
  "cover_repeat": no-repeat,
  "text_bg_color": inital,
  "text_fg_color": inital,
);

@each $category_name, $styling in $category_styling_by_name {
  $merged_styling: map-merge($default_category_styling, $styling);
  .#{$category_name}.event-card {
    > .mdl-card__title {
      background-color: map-get($merged_styling, "cover_bg_color");
      background-image: map-get($merged_styling, "cover_image");
      @if (str-index(map-get($merged_styling, "cover_image"), "url(")) {
        background-position: map-get($merged_styling, "cover_position");
        background-size: map-get($merged_styling, "cover_size");
        background-repeat: map-get($merged_styling, "cover_repeat");
        background-origin: content-box;
      } @else {
        background-position: center;
        background-size: cover;
      }
    }

    mark {
      background-color: map-get($merged_styling, "text_bg_color");
      color: map-get($merged_styling, "text_fg_color");
    }
  }
}
